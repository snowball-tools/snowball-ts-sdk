{"version":3,"file":"passkey.js","sourceRoot":"","sources":["../../src/auth/passkey.ts"],"names":[],"mappings":"AAGA,OAAO,EAAE,uBAAuB,EAAE,MAAM,yBAAyB,CAAC;AAElE,MAAM,OAAO,OAAO;IAGlB,YAAY,KAAY;QAFjB;;;;;WAAa;QAGlB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;IAED,mBAAmB;QACjB,OAAO,uBAAuB,EAAE,CAAC;QACjC,6CAA6C;IAC/C,CAAC;IAED,eAAe,CAAC,SAAiB;QAC/B,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;IAC9C,CAAC;IACD,mBAAmB;QACjB,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;IACD,qBAAqB,CAAC,MAAa;QACjC,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;CACF","sourcesContent":["import type { SimpleSmartAccountOwner } from \"@alchemy/aa-core\";\nimport type { SnowballAuth } from \"..\";\nimport type { Chain } from \"../helpers/chains\";\nimport { browserSupportsWebAuthn } from \"@simplewebauthn/browser\";\n\nexport class Passkey implements SnowballAuth {\n  public chain: Chain;\n\n  constructor(chain: Chain) {\n    this.chain = chain;\n  }\n\n  isWebAuthnSupported(): boolean {\n    return browserSupportsWebAuthn();\n    //&& !navigator.userAgent.includes(\"Firefox\")\n  }\n\n  registerPasskey(_username: string): Promise<void> {\n    throw new Error(\"Method not implemented..\");\n  }\n  authenticatePasskey(): Promise<void> {\n    throw new Error(\"Method not implemented.\");\n  }\n  getSimpleAccountOwner(_chain: Chain): Promise<SimpleSmartAccountOwner> {\n    throw new Error(\"Method not implemented.\");\n  }\n}\n"]}