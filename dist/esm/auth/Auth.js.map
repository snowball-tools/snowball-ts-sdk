{"version":3,"file":"Auth.js","sourceRoot":"","sources":["../../../src/auth/Auth.ts"],"names":[],"mappings":"AAEA,OAAO,EAAqB,MAAM,aAAa,CAAC;AAChD,OAAO,EAAE,YAAY,EAAyB,MAAM,YAAY,CAAC;AACjE,OAAO,EAAE,eAAe,EAAE,MAAM,WAAW,CAAC;AAE5C,MAAM,OAAO,IAAI;IAKf,YAAY,KAAY,EAAE,gBAAkC;QAJ5D;;;;;WAAmC;QACnC;;;;;WAAa;QACb;;;;;WAAuB;QAGrB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;QAEzC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1C,CAAC;IAED,mBAAmB;QACjB,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;IAED,KAAK,CAAC,QAAQ,CAAC,QAAgB;QAC7B,IAAI;YACF,QAAQ,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE;gBAClC,KAAK,YAAY,CAAC,GAAG,CAAC;gBACtB,KAAK,YAAY,CAAC,OAAO;oBACvB,OAAO,MAAM,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;gBAChD;oBACE,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;aAC9C;SACF;QAAC,OAAO,CAAC,EAAE;YACV,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;YACjC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;SAChB;IACH,CAAC;IAED,KAAK,CAAC,YAAY;QAChB,IAAI;YACF,QAAQ,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE;gBAClC,KAAK,YAAY,CAAC,GAAG,CAAC;gBACtB,KAAK,YAAY,CAAC,OAAO;oBACvB,OAAO,MAAM,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC;gBAC5C;oBACE,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;aAC9C;SACF;QAAC,OAAO,CAAC,EAAE;YACV,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;YACpC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;SAChB;IACH,CAAC;IAED,KAAK,CAAC,eAAe;QACnB,QAAQ,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE;YAClC,KAAK,YAAY,CAAC,GAAG,CAAC;YACtB,KAAK,YAAY,CAAC,OAAO;gBACvB,OAAO,MAAM,IAAI,CAAC,QAAQ,CAAC,eAAe,EAAE,CAAC;YAC/C;gBACE,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;SAC9C;IACH,CAAC;IAED,gBAAgB;QACd,QAAQ,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE;YAClC,KAAK,YAAY,CAAC,GAAG,CAAC;YACtB,KAAK,YAAY,CAAC,OAAO;gBACvB,OAAO,IAAI,eAAe,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;YAChE;gBACE,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;SAC9C;IACH,CAAC;CACF","sourcesContent":["import type { PKPEthersWallet } from \"@lit-protocol/pkp-ethers\";\nimport type { Chain } from \"../helpers/chains\";\nimport { type SnowballAuth } from \"../snowball\";\nimport { AuthProvider, type AuthProviderInfo } from \"../helpers\";\nimport { SnowballPasskey } from \"./Passkey\";\n\nexport class Auth implements SnowballAuth {\n  authProviderInfo: AuthProviderInfo;\n  chain: Chain;\n  provider: SnowballAuth;\n\n  constructor(chain: Chain, authProviderInfo: AuthProviderInfo) {\n    this.chain = chain;\n    this.authProviderInfo = authProviderInfo;\n\n    this.provider = this.initAuthProvider();\n  }\n\n  isWebAuthnSupported(): boolean {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  async register(username: string): Promise<void> {\n    try {\n      switch (this.authProviderInfo.name) {\n        case AuthProvider.lit:\n        case AuthProvider.turnkey:\n          return await this.provider.register(username);\n        default:\n          throw new Error(\"Method not implemented.\");\n      }\n    } catch (e) {\n      console.log(\"Error registering\");\n      console.log(e);\n    }\n  }\n\n  async authenticate(): Promise<void> {\n    try {\n      switch (this.authProviderInfo.name) {\n        case AuthProvider.lit:\n        case AuthProvider.turnkey:\n          return await this.provider.authenticate();\n        default:\n          throw new Error(\"Method not implemented.\");\n      }\n    } catch (e) {\n      console.log(\"Error authenticating\");\n      console.log(e);\n    }\n  }\n\n  async getEthersWallet(): Promise<PKPEthersWallet> {\n    switch (this.authProviderInfo.name) {\n      case AuthProvider.lit:\n      case AuthProvider.turnkey:\n        return await this.provider.getEthersWallet();\n      default:\n        throw new Error(\"Method not implemented.\");\n    }\n  }\n\n  initAuthProvider(): any {\n    switch (this.authProviderInfo.name) {\n      case AuthProvider.lit:\n      case AuthProvider.turnkey:\n        return new SnowballPasskey(this.chain, this.authProviderInfo);\n      default:\n        throw new Error(\"Method not implemented.\");\n    }\n  }\n}\n"]}