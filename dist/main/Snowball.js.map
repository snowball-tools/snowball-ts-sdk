{"version":3,"file":"Snowball.js","sourceRoot":"","sources":["../../src/main/Snowball.ts"],"names":[],"mappings":"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","sourcesContent":["import type {\n  SimpleSmartAccountOwner,\n  Address,\n  Hex,\n  ISmartAccountProvider,\n  SendUserOperationResult,\n} from \"@alchemy/aa-core\";\nimport type { Chain } from \"../helpers/chains\";\nimport type { FallbackTransport, Transport } from \"viem\";\nimport type { AuthMethod } from \"@lit-protocol/types\";\nimport {\n  type AuthProvider,\n  type AAProvider,\n  Auth,\n  AA,\n} from \"../helpers/constants\";\nimport { AlchemyAA } from \"../SmartContractWallet/AlchemyAA\";\nimport { LitPasskey } from \"../Auth/LitPasskey\";\n\nexport interface SnowballAuth {\n  authProvider: AuthProvider;\n  chain: Chain;\n  // isWebAuthnSupported(): boolean;\n  registerPasskey(username: string): Promise<void>;\n  authenticatePasskey(): Promise<AuthMethod>;\n  getSimpleAccountOwner(): Promise<SimpleSmartAccountOwner>;\n}\n\nexport interface SnowballSmartWallet<\n  TTransport extends Transport | FallbackTransport = Transport\n> extends ISmartAccountProvider<TTransport> {\n  aaProvider: AAProvider;\n  auth: SnowballAuth;\n  sendUserOp(\n    targetAddress: Address,\n    data: Hex,\n    sponsorGas: Boolean\n  ): Promise<SendUserOperationResult>;\n}\n\nexport class Snowball {\n  private apiKey: string;\n  private chain: Chain;\n  private authProvider: AuthProvider;\n  private aaProvider: AAProvider;\n\n  public auth: SnowballAuth;\n  public smartWallet: SnowballSmartWallet | undefined;\n  public address: Address | undefined;\n\n  constructor(\n    apiKey: string,\n    authProvider: AuthProvider,\n    aaProvider: AAProvider,\n    chain: Chain\n  ) {\n    this.apiKey = apiKey;\n    this.authProvider = authProvider;\n    this.aaProvider = aaProvider;\n    this.chain = chain;\n\n    this.auth = this.initAuthProvider(authProvider);\n\n    this.initAAProvider(aaProvider)\n      .catch((e) => {\n        throw e;\n      })\n      .then((smartWallet) => {\n        this.smartWallet = smartWallet;\n        smartWallet\n          .getAddress()\n          .catch((e) => {\n            throw e;\n          })\n          .then((address) => {\n            this.address = address;\n          });\n      });\n  }\n\n  initAuthProvider(\n    authProvider: AuthProvider = this.authProvider\n  ): SnowballAuth {\n    switch (authProvider.name) {\n      case Auth.lit:\n        return new LitPasskey(this.chain, authProvider);\n      case Auth.turnkey:\n      case Auth.privy:\n      default:\n        throw new Error(\"Auth Provider has not been impl yet\");\n    }\n  }\n\n  async initAAProvider(\n    aaProvider: AAProvider = this.aaProvider\n  ): Promise<SnowballSmartWallet> {\n    switch (aaProvider.name) {\n      case AA.alchemy:\n        try {\n          const simpleAccountOwner = await this.auth.getSimpleAccountOwner();\n          this.smartWallet = new AlchemyAA(\n            this.auth,\n            simpleAccountOwner,\n            aaProvider\n          );\n          this.address = await this.smartWallet.getAddress();\n          return this.smartWallet;\n        } catch (e) {\n          throw e;\n        }\n      case AA.fun:\n      default:\n        throw new Error(\"Invalid auth provider\");\n    }\n  }\n\n  async getSmartWalletAddress(): Promise<Address> {\n    try {\n      if (this.address) {\n        return this.address;\n      }\n\n      if (this.smartWallet === undefined) {\n        this.smartWallet = await this.initAAProvider();\n      }\n\n      return this.address!;\n    } catch (e) {\n      throw e;\n    }\n  }\n\n  async sendUserOperation(\n    targetAddress: Address,\n    data: Hex,\n    sponsorGas: Boolean\n  ): Promise<SendUserOperationResult> {\n    if (this.smartWallet === undefined) {\n      this.smartWallet = await this.initAAProvider();\n    }\n\n    return await this.smartWallet.sendUserOp(targetAddress, data, sponsorGas);\n  }\n}\n"]}