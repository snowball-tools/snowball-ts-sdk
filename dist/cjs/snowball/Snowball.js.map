{"version":3,"file":"Snowball.js","sourceRoot":"","sources":["../../../src/snowball/Snowball.ts"],"names":[],"mappings":"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","sourcesContent":["import type {\n  Address,\n  Hex,\n  UserOperationReceipt,\n  UserOperationResponse,\n} from \"@alchemy/aa-core\";\nimport type { Chain } from \"../helpers/chains\";\nimport {\n  type SmartWalletProviderInfo,\n  type AuthProviderInfo,\n  AuthProvider,\n} from \"../helpers/constants\";\nimport { SmartWallet } from \"../wallet\";\nimport type { PKPEthersWallet } from \"@lit-protocol/pkp-ethers\";\nimport { SnowballPasskey } from \"../auth/Passkey\";\nimport type { SnowballAuth, SnowballSmartWallet } from \"./types\";\nimport { LIT_RELAY_API_KEY } from \"../helpers/env\";\nimport { Hash } from \"viem\";\n\nexport class Snowball {\n  private apiKey: string;\n  private chain: Chain;\n  private authProviderInfo: AuthProviderInfo;\n  private smartWalletProviderInfo: SmartWalletProviderInfo;\n\n  public auth: SnowballAuth;\n  public smartWallet: SnowballSmartWallet | undefined;\n  public ethersWallet: PKPEthersWallet | undefined;\n\n  constructor(\n    apiKey: string,\n    chain: Chain,\n    authProviderInfo: AuthProviderInfo,\n    smartWalletProviderInfo: SmartWalletProviderInfo\n  ) {\n    this.apiKey = apiKey;\n    this.chain = chain;\n    this.authProviderInfo =\n      authProviderInfo.name == AuthProvider.lit\n        ? {\n            name: authProviderInfo.name,\n            apiKeys: {\n              relayKey: LIT_RELAY_API_KEY + \"_\" + this.apiKey,\n            },\n          }\n        : authProviderInfo;\n    this.smartWalletProviderInfo = smartWalletProviderInfo;\n\n    this.auth = new SnowballPasskey(this.chain, this.authProviderInfo);\n  }\n\n  async register(username: string): Promise<void> {\n    try {\n      return await this.auth.register(username);\n    } catch (error) {\n      return Promise.reject(`register failed ${error}`);\n    }\n  }\n\n  async authenticate(): Promise<void> {\n    try {\n      return await this.auth.authenticate();\n    } catch (error) {\n      return Promise.reject(`authenticate failed ${error}`);\n    }\n  }\n\n  async getEthersWallet(): Promise<PKPEthersWallet> {\n    try {\n      return await this.auth.getEthersWallet();\n    } catch (error) {\n      return Promise.reject(`getEthersWallet failed ${error}`);\n    }\n  }\n\n  async changeChain(chain: Chain) {\n    try {\n      if (this.smartWallet === undefined) {\n        this.smartWallet = await this.initSmartWallet();\n      }\n      this.chain = chain;\n      this.smartWallet.changeChain();\n    } catch (error) {\n      return Promise.reject(`changeChain failed ${error}`);\n    }\n  }\n\n  async getAddress(): Promise<Address> {\n    try {\n      if (this.smartWallet === undefined) {\n        this.smartWallet = await this.initSmartWallet();\n      }\n      return await this.smartWallet.getAddress();\n    } catch (error) {\n      return Promise.reject(`getAddress failed ${error}`);\n    }\n  }\n\n  private async initSmartWallet(): Promise<SnowballSmartWallet> {\n    try {\n      if (this.ethersWallet === undefined) {\n        this.ethersWallet = await this.getEthersWallet();\n      }\n      this.smartWallet = new SmartWallet(\n        this.ethersWallet,\n        this.auth,\n        this.smartWalletProviderInfo\n      );\n      return this.smartWallet;\n    } catch (error) {\n      return Promise.reject(`initSmartWallet failed ${error}`);\n    }\n  }\n\n  async sendUserOperation(\n    targetAddress: Address,\n    data: Hex,\n    sponsorGas: Boolean\n  ): Promise<{\n    hash: string;\n  }> {\n    try {\n      if (this.smartWallet === undefined) {\n        this.smartWallet = await this.initSmartWallet();\n      }\n      return await this.smartWallet.sendUserOperation(\n        targetAddress,\n        data,\n        sponsorGas\n      );\n    } catch (error) {\n      return Promise.reject(`sendUserOperation failed ${error}`);\n    }\n  }\n\n  async waitForUserOperationTransaction(hash: Hash): Promise<Hash> {\n    try {\n      if (this.smartWallet === undefined) {\n        this.smartWallet = await this.initSmartWallet();\n      }\n      return await this.smartWallet.waitForUserOperationTransaction(hash);\n    } catch (error) {\n      return Promise.reject(`waitForUserOperationTransaction failed ${error}`);\n    }\n  }\n\n  async getUserOperationByHash(hash: Hash): Promise<UserOperationResponse> {\n    try {\n      if (this.smartWallet === undefined) {\n        this.smartWallet = await this.initSmartWallet();\n      }\n      return await this.smartWallet.getUserOperationByHash(hash);\n    } catch (error) {\n      return Promise.reject(`getUserOperationByHash failed ${error}`);\n    }\n  }\n\n  async getUserOperationReceipt(hash: Hash): Promise<UserOperationReceipt> {\n    try {\n      if (this.smartWallet === undefined) {\n        this.smartWallet = await this.initSmartWallet();\n      }\n      return await this.smartWallet.getUserOperationReceipt(hash);\n    } catch (error) {\n      return Promise.reject(`getUserOperationReceipt failed ${error}`);\n    }\n  }\n}\n"]}