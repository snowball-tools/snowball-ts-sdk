{"version":3,"file":"TurkeyPasskey.js","sourceRoot":"","sources":["../../../../../src/auth/Passkey/providers/TurkeyPasskey.ts"],"names":[],"mappings":";;;AAIA,MAAa,aAAa;IAIxB,YAAY,KAAY,EAAE,gBAAkC;QAH5D;;;;;WAAa;QACb;;;;;WAAmC;QAGjC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;IAC3C,CAAC;IAED,eAAe,CAAC,SAAiB;QAC/B,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;IACD,mBAAmB;QACjB,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;IACD,eAAe;QACb,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;IACD,WAAW,CAAC,MAAa;QACvB,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;CACF;AArBD,sCAqBC","sourcesContent":["import type { PKPEthersWallet } from \"@lit-protocol/pkp-ethers\";\nimport type { AuthProviderInfo, Chain } from \"../../../helpers\";\nimport type { SnowballPasskeyProvider } from \"./SnowballPasskeyProvider\";\n\nexport class TurkeyPasskey implements SnowballPasskeyProvider {\n  chain: Chain;\n  authProviderInfo: AuthProviderInfo;\n\n  constructor(chain: Chain, authProviderInfo: AuthProviderInfo) {\n    this.chain = chain;\n    this.authProviderInfo = authProviderInfo;\n  }\n\n  registerPasskey(_username: string): Promise<void> {\n    throw new Error(\"Method not implemented.\");\n  }\n  authenticatePasskey(): Promise<void> {\n    throw new Error(\"Method not implemented.\");\n  }\n  getEthersWallet(): Promise<PKPEthersWallet> {\n    throw new Error(\"Method not implemented.\");\n  }\n  changeChain(_chain: Chain): Promise<PKPEthersWallet> {\n    throw new Error(\"Method not implemented.\");\n  }\n}\n"]}