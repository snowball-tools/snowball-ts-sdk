{"version":3,"file":"Auth.js","sourceRoot":"","sources":["../../../src/auth/Auth.ts"],"names":[],"mappings":";;;AAGA,wCAAiE;AACjE,uCAA4C;AAC5C,wCAAmD;AAEnD,MAAa,IAAI;IAKf,YACE,KAAY,EACZ,gBAAkC,EAClC,cAAsB;QAPxB;;;;;WAAmC;QACnC;;;;;WAAa;QACb;;;;;WAA2B;QAOzB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,gBAAgB,GAAG;YACtB,IAAI,EAAE,gBAAgB,CAAC,IAAI;YAC3B,OAAO,EAAE;gBACP,QAAQ,EAAE,uBAAiB,GAAG,GAAG,GAAG,cAAc;aACnD;SACF,CAAC;QAEF,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC9C,CAAC;IAED,KAAK,CAAC,QAAQ,CAAC,QAAgB;QAC7B,IAAI;YACF,QAAQ,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE;gBAClC,KAAK,sBAAY,CAAC,GAAG;oBACnB,OAAO,MAAM,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;gBACpD,KAAK,sBAAY,CAAC,OAAO,CAAC;gBAC1B;oBACE,OAAO,OAAO,CAAC,MAAM,CAAC,yBAAyB,CAAC,CAAC;aACpD;SACF;QAAC,OAAO,CAAC,EAAE;YACV,OAAO,CAAC,MAAM,CAAC,sBAAsB,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;SAC3D;IACH,CAAC;IAED,KAAK,CAAC,YAAY;QAChB,IAAI;YACF,QAAQ,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE;gBAClC,KAAK,sBAAY,CAAC,GAAG;oBACnB,OAAO,MAAM,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC;gBAChD,KAAK,sBAAY,CAAC,OAAO,CAAC;gBAC1B;oBACE,OAAO,OAAO,CAAC,MAAM,CAAC,yBAAyB,CAAC,CAAC;aACpD;SACF;QAAC,OAAO,CAAC,EAAE;YACV,OAAO,OAAO,CAAC,MAAM,CAAC,yBAAyB,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;SACrE;IACH,CAAC;IAED,KAAK,CAAC,eAAe;QACnB,IAAI;YACF,QAAQ,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE;gBAClC,KAAK,sBAAY,CAAC,GAAG;oBACnB,OAAO,MAAM,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,CAAC;gBACnD,KAAK,sBAAY,CAAC,OAAO,CAAC;gBAC1B;oBACE,OAAO,OAAO,CAAC,MAAM,CAAC,yBAAyB,CAAC,CAAC;aACpD;SACF;QAAC,OAAO,CAAC,EAAE;YACV,OAAO,OAAO,CAAC,MAAM,CAAC,0BAA0B,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;SACtE;IACH,CAAC;IAED,gBAAgB;QACd,QAAQ,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE;YAClC,KAAK,sBAAY,CAAC,GAAG,CAAC;YACtB,KAAK,sBAAY,CAAC,OAAO,CAAC;YAC1B;gBACE,OAAO,IAAI,yBAAe,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;SACjE;IACH,CAAC;IAED,KAAK,CAAC,WAAW,CAAC,KAAY;QAC5B,IAAI;YACF,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,OAAO,MAAM,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;SACnD;QAAC,OAAO,KAAK,EAAE;YACd,OAAO,OAAO,CAAC,MAAM,CAAC,sBAAsB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;SACtE;IACH,CAAC;CACF;AAhFD,oBAgFC","sourcesContent":["import type { PKPEthersWallet } from \"@lit-protocol/pkp-ethers\";\nimport type { Chain } from \"../helpers/chains\";\nimport { type SnowballAuth } from \"../snowball\";\nimport { AuthProvider, type AuthProviderInfo } from \"../helpers\";\nimport { SnowballPasskey } from \"./Passkey\";\nimport { LIT_RELAY_API_KEY } from \"../helpers/env\";\n\nexport class Auth implements SnowballAuth {\n  authProviderInfo: AuthProviderInfo;\n  chain: Chain;\n  authProvider: SnowballAuth;\n\n  constructor(\n    chain: Chain,\n    authProviderInfo: AuthProviderInfo,\n    snowballAPIKey: string\n  ) {\n    this.chain = chain;\n    this.authProviderInfo = {\n      name: authProviderInfo.name,\n      apiKeys: {\n        relayKey: LIT_RELAY_API_KEY + \"_\" + snowballAPIKey,\n      },\n    };\n\n    this.authProvider = this.initAuthProvider();\n  }\n\n  async register(username: string): Promise<void> {\n    try {\n      switch (this.authProviderInfo.name) {\n        case AuthProvider.lit:\n          return await this.authProvider.register(username);\n        case AuthProvider.turnkey:\n        default:\n          return Promise.reject(\"Method not implemented.\");\n      }\n    } catch (e) {\n      Promise.reject(`registering failed ${JSON.stringify(e)}`);\n    }\n  }\n\n  async authenticate(): Promise<void> {\n    try {\n      switch (this.authProviderInfo.name) {\n        case AuthProvider.lit:\n          return await this.authProvider.authenticate();\n        case AuthProvider.turnkey:\n        default:\n          return Promise.reject(\"Method not implemented.\");\n      }\n    } catch (e) {\n      return Promise.reject(`authenticating failed ${JSON.stringify(e)}`);\n    }\n  }\n\n  async getEthersWallet(): Promise<PKPEthersWallet> {\n    try {\n      switch (this.authProviderInfo.name) {\n        case AuthProvider.lit:\n          return await this.authProvider.getEthersWallet();\n        case AuthProvider.turnkey:\n        default:\n          return Promise.reject(\"Method not implemented.\");\n      }\n    } catch (e) {\n      return Promise.reject(`getEthersWallet failed ${JSON.stringify(e)}`);\n    }\n  }\n\n  initAuthProvider(): SnowballAuth {\n    switch (this.authProviderInfo.name) {\n      case AuthProvider.lit:\n      case AuthProvider.turnkey:\n      default:\n        return new SnowballPasskey(this.chain, this.authProviderInfo);\n    }\n  }\n\n  async changeChain(chain: Chain): Promise<PKPEthersWallet> {\n    try {\n      this.chain = chain;\n      return await this.authProvider.changeChain(chain);\n    } catch (error) {\n      return Promise.reject(`changeChain failed ${JSON.stringify(error)}`);\n    }\n  }\n}\n"]}