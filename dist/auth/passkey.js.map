{"version":3,"file":"Passkey.js","sourceRoot":"","sources":["../../src/Auth/Passkey.ts"],"names":[],"mappings":"AAGA,OAAO,EAAE,uBAAuB,EAAE,MAAM,yBAAyB,CAAC;AAGlE,MAAM,OAAO,OAAO;IACX,KAAK,CAAQ;IACb,YAAY,CAAe;IAElC,YAAY,KAAY,EAAE,YAA0B;QAClD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;IACnC,CAAC;IAED,mBAAmB;QACjB,OAAO,CACL,uBAAuB,EAAE,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,CACtE,CAAC;IACJ,CAAC;IAED,eAAe,CAAC,SAAiB;QAC/B,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;IAC9C,CAAC;IACD,mBAAmB;QACjB,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;IACD,qBAAqB;QACnB,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;CACF","sourcesContent":["import type { SimpleSmartAccountOwner } from \"@alchemy/aa-core\";\nimport type { AuthProvider, SnowballAuth } from \"..\";\nimport type { Chain } from \"../helpers/chains\";\nimport { browserSupportsWebAuthn } from \"@simplewebauthn/browser\";\nimport type { AuthMethod } from \"@lit-protocol/types\";\n\nexport class Passkey implements SnowballAuth {\n  public chain: Chain;\n  public authProvider: AuthProvider;\n\n  constructor(chain: Chain, authProvider: AuthProvider) {\n    this.chain = chain;\n    this.authProvider = authProvider;\n  }\n\n  isWebAuthnSupported(): boolean {\n    return (\n      browserSupportsWebAuthn() && !navigator.userAgent.includes(\"Firefox\")\n    );\n  }\n\n  registerPasskey(_username: string): Promise<void> {\n    throw new Error(\"Method not implemented..\");\n  }\n  authenticatePasskey(): Promise<AuthMethod> {\n    throw new Error(\"Method not implemented.\");\n  }\n  getSimpleAccountOwner(): Promise<SimpleSmartAccountOwner> {\n    throw new Error(\"Method not implemented.\");\n  }\n}\n"]}